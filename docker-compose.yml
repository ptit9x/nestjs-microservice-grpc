version: '3.7'

services:
  generic:
    build:
      context: .docker
      dockerfile: Dockerfile.dev
    volumes:
      - ./proto:/app
    working_dir: /app
  db:
    container_name: 'microservice_db'
    hostname: 'microservice_db'
    image: 'postgres:14-alpine'
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: microservice_db
      POSTGRES_USER: microservice_user
      POSTGRES_PASSWORD: microservice_password
    volumes:
      - ./data/postgres:/data/postgres
    restart: unless-stopped

  node_1:
    build:
      context: .docker
      dockerfile: Dockerfile.dev
    volumes:
      - ./microservices/nestjs-base-service:/app
      - ./proto:/proto
    command: nest start --watch
    working_dir: /app
    environment:
      - GRPC_URL_BASE_SERVICE=0.0.0.0:50051

  node_2:
    build:
      context: .docker
      dockerfile: Dockerfile.dev
    volumes:
      - ./microservices/nestjs-user-service:/app
      - ./proto:/proto
    command: nest start --watch
    working_dir: /app
    environment:
      - GRPC_URL_USER_SERVICE=0.0.0.0:50052
      - DB_HOST=microservice_db
      - DB_USERNAME=microservice_user
      - DB_PASSWORD=microservice_password
      - DB_NAME=postgres
      - DB_PORT=5432
    depends_on: 
      - db
    
  node_client:
    build:
      context: .docker
      dockerfile: Dockerfile.dev
    volumes:
      - ./nestjs-api-gateway:/app
      - ./proto:/proto
    command: nest start --watch
    working_dir: /app
    ports: 
      - 3000:3000
    environment:
      - NODE_ENV=3000
      - GRPC_URL_BASE_SERVICE=node_1:50051
      - GRPC_URL_USER_SERVICE=node_2:50052
    depends_on: 
      - node_1
      - node_2